# https://help.github.com/en/categories/automating-your-workflow-with-github-actions

name: "Build"

on:
  pull_request:
  push:
    branches:
      - "1.3.x"

jobs:
  lint:
    name: "Lint"
    runs-on: "ubuntu-latest"

    strategy:
      fail-fast: false
      matrix:
        php-version:
          - "7.2"
          - "7.3"
          - "7.4"
          - "8.0"
          - "8.1"
          - "8.2"
          - "8.3"

    steps:
      - name: "Checkout"
        uses: actions/checkout@v3

      - name: "Install PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          coverage: "none"
          php-version: "${{ matrix.php-version }}"
          ini-file: development
          extensions: "mongodb"

      - name: "Validate Composer"
        run: "composer validate"

      - name: "Downgrade PHPUnit"
        if: matrix.php-version == '7.2' || matrix.php-version == '7.3'
        run: "composer require --dev phpunit/phpunit:^8.5.31 --no-update --update-with-dependencies"

      - name: "Install dependencies"
        run: "composer install --no-interaction --no-progress"

      - name: "Lint"
        run: "make lint"

  coding-standard:
    name: "Coding Standard"

    runs-on: "ubuntu-latest"

    steps:
      - name: "Checkout"
        uses: actions/checkout@v3

      - name: "Checkout build-cs"
        uses: actions/checkout@v3
        with:
          repository: "phpstan/build-cs"
          path: "build-cs"

      - name: "Install PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          coverage: "none"
          php-version: "8.2"
          ini-file: development
          extensions: "mongodb"

      - name: "Validate Composer"
        run: "composer validate"

      - name: "Install dependencies"
        run: "composer install --no-interaction --no-progress"

      - name: "Install build-cs dependencies"
        working-directory: "build-cs"
        run: "composer install --no-interaction --no-progress"

      - name: "Lint"
        run: "make lint"

      - name: "Coding Standard"
        run: "make cs"

  tests:
    name: "Tests"
    runs-on: "ubuntu-latest"

    strategy:
      fail-fast: false
      matrix:
        php-version:
          - "7.2"
          - "7.3"
          - "7.4"
          - "8.0"
          - "8.1"
          - "8.2"
        dependencies:
          - "lowest"
          - "highest"
        update-packages:
          - ""
        include:
          - php-version: "8.3"
            dependencies: "highest"
            update-packages: |
              composer config extra.patches.doctrine/orm --json --merge '["compatibility/patches/Column.patch", "compatibility/patches/DiscriminatorColumn.patch", "compatibility/patches/DiscriminatorMap.patch", "compatibility/patches/Embeddable.patch", "compatibility/patches/Embedded.patch", "compatibility/patches/Entity.patch", "compatibility/patches/GeneratedValue.patch", "compatibility/patches/Id.patch", "compatibility/patches/InheritanceType.patch", "compatibility/patches/JoinColumn.patch", "compatibility/patches/JoinColumns.patch", "compatibility/patches/ManyToMany.patch", "compatibility/patches/ManyToOne.patch", "compatibility/patches/MappedSuperclass.patch", "compatibility/patches/OneToMany.patch", "compatibility/patches/OneToOne.patch", "compatibility/patches/OrderBy.patch", "compatibility/patches/UniqueConstraint.patch", "compatibility/patches/Version.patch"]'
              composer config extra.patches.carbonphp/carbon-doctrine-types --json --merge '["compatibility/patches/DateTimeImmutableType.patch", "compatibility/patches/DateTimeType.patch"]'
              composer require --dev doctrine/orm:^3.0 doctrine/dbal:^4.0 carbonphp/carbon-doctrine-types:^3 -W

    steps:
      - name: "Checkout"
        uses: actions/checkout@v3

      - name: "Install PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          coverage: "none"
          php-version: "${{ matrix.php-version }}"
          ini-file: development
          extensions: "mongodb"

      - name: "Downgrade PHPUnit"
        if: matrix.php-version == '7.2' || matrix.php-version == '7.3'
        run: "composer require --dev phpunit/phpunit:^8.5.31 --no-update --update-with-dependencies"

      - name: "Install lowest dependencies"
        if: ${{ matrix.dependencies == 'lowest' }}
        run: "composer update --prefer-lowest --no-interaction --no-progress"

      - name: "Update Doctrine DBAl to ^3"
        if: matrix.php-version != '7.2' && matrix.dependencies == 'lowest'
        run: "composer require --dev doctrine/dbal:^3.3.8 --no-interaction --no-progress"

      - name: "Install highest dependencies"
        if: ${{ matrix.dependencies == 'highest' }}
        run: "composer update --no-interaction --no-progress"

      - name: "Update packages"
        run: ${{ matrix.update-packages }}

      - name: "Tests"
        run: "make tests"

  static-analysis:
    name: "PHPStan"
    runs-on: "ubuntu-latest"

    strategy:
      fail-fast: false
      matrix:
        php-version:
          - "7.3"
          - "7.4"
          - "8.0"
          - "8.1"
          - "8.2"
          - "8.3"
        update-packages:
          - ""
        include:
          - php-version: "8.3"
            update-packages: "composer require --dev doctrine/orm:^3.0 doctrine/dbal:^4.0 carbonphp/carbon-doctrine-types:^3 -W"

    steps:
      - name: "Checkout"
        uses: actions/checkout@v3

      - name: "Install PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          coverage: "none"
          php-version: "${{ matrix.php-version }}"
          extensions: "mongodb"
          ini-file: development

      - name: "Downgrade PHPUnit"
        if: matrix.php-version == '7.2' || matrix.php-version == '7.3'
        run: "composer require --dev phpunit/phpunit:^8.5.31 --no-update --update-with-dependencies"

      - name: "Install dependencies"
        run: "composer update --no-interaction --no-progress"

      - name: "Update packages"
        run: ${{ matrix.update-packages }}

      - name: "PHPStan"
        run: "make phpstan"
